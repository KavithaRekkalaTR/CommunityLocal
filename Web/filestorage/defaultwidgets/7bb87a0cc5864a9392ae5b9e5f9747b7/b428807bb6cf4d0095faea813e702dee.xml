<?xml version="1.0" encoding="utf-8"?>
<scriptedContentFragments>
  <scriptedContentFragment name="${resource:MediaGalleries_MediaGalleryPost_Name}" version="11.0.0.0" description="${resource:MediaGalleries_MediaGalleryPost_Description}" instanceIdentifier="b428807bb6cf4d0095faea813e702dee" theme="" isCacheable="true" varyCacheByUser="true" showHeaderByDefault="false" cssClass="media-gallery-post" lastModified="2020-01-14 16:08:40Z" provider="7bb87a0cc5864a9392ae5b9e5f9747b7">
    <contentScript language="Velocity"><![CDATA[$core_v2_page.AddLink('stylesheet', $core_v2_widget.GetExecutedFileUrl('style.less'), "%{ Position = 'AfterTheme' }")

#set ($media = false)
#set ($media = $core_v2_media.Current)
#set ($mediaType = $core_v2_ui.GetMediaType($media.File.FileUrl, "%{ViewType='View'}"))

#set ($hasRateMediaPermission = $core_v3_permission.CheckPermission($core_v2_mediaPermissions.RatePost, $core_v2_user.Accessing.Id, "%{ ContentId = $media.ContentId, ContentTypeId = $core_v2_media.ContentTypeId }").IsAllowed)
#set ($hasDownloadPermission = $core_v3_permission.CheckPermission($core_v2_mediaPermissions.DownloadPost, $core_v2_user.Accessing.Id, "%{ ContentId = $media.ContentId, ContentTypeId = $core_v2_media.ContentTypeId }").IsAllowed)
#set ($accessingUserIsRegistered = $core_v2_user.IsRegistered($core_v2_user.Accessing.Id))

## if there is no current media, redirect to no-post page
#if (!$media)
	$core_v2_widget.Hide()
#end

$core_v2_media.IncrementViewCount($media.Id)

#if(!$media.IsApproved)
	<div class="message warning">
		$core_v2_language.GetResource('DraftPost')
	</div>
#end

<div class="content full">
	#if ($hasDownloadPermission)
	<div class="actions download">
		<a href="$core_v2_encoding.HtmlAttributeEncode($core_v2_mediaUrls.DownloadMedia($media.Id, false))" class="internal-link download-attachment button button-style-big">
			#if ($media.File.IsRemoteAttachment)
				$core_v2_language.GetResource("MediaGalleries_Button_View")
			#else
				$core_v2_language.GetResource("MediaGalleries_Button_Download")
			#end
		</a>
	</div>
	#end
	<h1 class="name with-actions">
		#if ($hasDownloadPermission)
			<a href="$core_v2_encoding.HtmlAttributeEncode($core_v2_mediaUrls.DownloadMedia($media.Id, false))" class="internal-link download-attachment">$media.Title</a>
		#else
			$media.Title
		#end
	</h1>
	#if ($mediaType != 'Empty')
		<div class="attachment">
			<div class="attachment-view">
				$!core_v2_ui.GetViewHtml($media.File.FileUrl, "%{ViewType='View', AdjustToContainer='True', OutputIsPersisted='False'}")
			</div>
		</div>
	#end
	<div class="content">$!media.Body()</div>

	#if ($media.Tags)
		#foreach ($tag in $media.Tags)
		#beforeall
			<div class="content-tags">
				<ul class="tag-list">
		#each
			#set ($tagUrl = false)
			#set ($tagUrl = $core_v2_mediaUrls.Tags($media.MediaGalleryId, $core_v2_utility.MakeList($tag)))
			#if ($tagUrl)
				<li class="tag-item">
					<a href="$core_v2_encoding.HtmlAttributeEncode($tagUrl)" rel="tag">$tag</a>
				</li>
			#end
		#afterall
				</ul>
			</div>
		#end
	#end

	<div class="author">
		<span class="user-name">
			#if ($media.Author.ProfileUrl)
				<a href="$core_v2_encoding.HtmlAttributeEncode($media.Author.ProfileUrl)" class="internal-link view-user-profile">
					$media.Author.DisplayName
				</a>
			#else
				$media.Author.DisplayName
			#end
		</span>
		<div class="avatar">
			#if ($media.Author.ProfileUrl)
				<a href="$core_v2_encoding.HtmlAttributeEncode($media.Author.ProfileUrl)">
					$core_v2_ui.GetResizedImageHtml($media.Author.AvatarUrl, 32, 32, "%{border='0', alt=$media.Author.DisplayName, ResizeMethod='ZoomAndCrop'}")
				</a>
			#else
				$core_v2_ui.GetResizedImageHtml($media.Author.AvatarUrl, 32, 32, "%{border='0', alt=$media.Author.DisplayName, ResizeMethod='ZoomAndCrop'}")
			#end
		</div>
	</div>

	<div class="actions">
		#set($maxLinks = 3)
		#set($minLinks = 2)
		#if ($core_v2_media.AreRatingsEnabled($media.Id))
			#set($maxLinks = 4)
			#set($minLinks = 3)
		#end
		<div class="ui-links navigation-list" data-minlinks="$minLinks" data-direction="horizontal" data-maxlinks="$maxLinks">
			<ul class="navigation-list">
				<li class="navigation-list-item date">
					<span class="attribute-value">$core_v2_language.FormatDate($media.Date)</span>
				</li>

				#if ($accessingUserIsRegistered)
					#set ($likeFormat = '{toggle} <span class="count"><span class="icon"></span>{count}</span>')
				#else
					#set ($likeFormat = '<span class="count"><span class="icon"></span>{count}</span>')
				#end
				<li class="navigation-list-item like">
					$core_v2_ui.Like($media.ContentId, $core_v2_media.ContentTypeId, "%{ Format = $likeFormat, IncludeTip = 'true' }")
				</li>

				#if ($core_v2_media.AreRatingsEnabled($media.Id))
					<li class="navigation-list-item rating">
						$core_v2_ui.Rate($media.ContentId, $core_v2_media.ContentTypeId)
					</li>
				#end

				<li class="navigation-list-item post-attachment-download-count">
					<span class="attribute-value">
						#if ($media.Downloads == 1)
							$core_v2_language.FormatString($core_v2_language.GetResource('Downloads_Singular'), $core_v2_language.FormatNumber($media.Downloads))
						#else
							$core_v2_language.FormatString($core_v2_language.GetResource('Downloads_Plural'), $core_v2_language.FormatNumber($media.Downloads))
						#end
					</span>
				</li>

				#if ($core_v2_user.IsRegistered($core_v2_user.Accessing.Id))
					<li class="navigation-list-item">
						<a data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaSubscribe" data-mediaid="$media.Id" data-subscribed="true" href="#" #if(!$core_v2_media.IsSubscribed($media.Id,"%{IncludeApplicationSubscriptions='false'}")) style="display:none;" #end>$core_v2_language.GetResource('StopEmailingReplies')</a>
					</li>
					<li>
						<a data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaSubscribe" data-mediaid="$media.Id" data-subscribed="false" href="#" #if($core_v2_media.IsSubscribed($media.Id,"%{IncludeApplicationSubscriptions='false'}")) style="display:none;" #end>$core_v2_language.GetResource('EmailReplies')</a>
					</li>
					#registerEndOfPageHtml()
						<script type="text/javascript">
						jQuery(function(j){
							j.telligent.evolution.messaging.subscribe('widget.${core_v2_widget.WrapperElementId}.mediaSubscribe', function(data) {
								var link = j(data.target);
								j.telligent.evolution.post({
									url: '$core_v2_encoding.JavascriptEncode($core_v2_widget.GetExecutedFileUrl('subscribe.vm'))',
									data: {
										type: 'media',
										subscribe: !link.data('subscribed'),
										mediaId: link.data('mediaid')
									},
									dataType: 'json',
									success: function(response) {
										if (response.subscribe) {
											link.closest('ul').find('a[data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaSubscribe"][data-subscribed="false"]').hide();
											link.closest('ul').find('a[data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaSubscribe"][data-subscribed="true"]').show();
										} else {
											link.closest('ul').find('a[data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaSubscribe"][data-subscribed="false"]').show();
											link.closest('ul').find('a[data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaSubscribe"][data-subscribed="true"]').hide();
										}

										if (response.warnings && response.warnings.length > 0) {
											j.telligent.evolution.notifications.show(response.warnings[0], { type: 'warning' });
										}
									}
								});
							});
						});
						</script>
					#end
				#end

				<li class="navigation-list-item">
					#set($url = $core_v2_mediaUrls.ShareMedia($media.Id, "%{Modal='False'}"))
					#if($url)
						<li class="navigation-list-item"><a href="$core_v2_encoding.HtmlEncode($url)" class="internal-link email-post">$core_v2_language.GetResource('MediaGallery_Share')</a></li>
					#else
						<li class="navigation-list-item"><a href="mailto:?subject=$media.Title&body=$core_v2_encoding.HtmlAttributeEncode($core_v2_page.AbsoluteUrl($media.Url))" class="internal-link email-post">$core_v2_language.GetResource('MediaGallery_Share')</a></li>
					#end
				</li>

				#if ($core_v2_mediaUrls.EditMedia($media.Id))
					<li class="navigation-list-item">
						<a href="$core_v2_encoding.HtmlAttributeEncode($core_v2_mediaUrls.EditMedia($media.Id))" class="internal-link edit-post">$core_v2_language.GetResource("MediaGalleries_Button_Edit")</a>
					</li>
				#end

				#if ($media && $core_v3_permission.CheckPermission($core_v2_mediaPermissions.DeletePost, $core_v2_user.Accessing.Id, "%{ ContentId = $media.ContentId, ContentTypeId = $core_v2_media.ContentTypeId }").IsAllowed)
					<li class="navigation-list-item"><a href="#" data-messagename="widget.${core_v2_widget.WrapperElementId}.mediaDelete" data-mediaid="$media.Id" data-galleryid="$media.MediaGalleryId" data-successurl="$core_v2_encoding.HtmlAttributeEncode($core_v2_mediaUrls.Gallery($media.MediaGalleryId))" id="$core_v2_widget.UniqueId('deletepost')" class="internal-link delete-post">$core_v2_language.GetResource('MediaGalleries_Button_Delete')</a></li>
					<script type="text/javascript">
					jQuery(function(j){
						j.telligent.evolution.messaging.subscribe('widget.${core_v2_widget.WrapperElementId}.mediaDelete', function(data) {
							if (window.confirm('$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('MediaGalleries_MediaGalleryLinks_DeletePostConfirmation'))'))
							{
								jQuery.telligent.evolution.del({
									url: jQuery.telligent.evolution.site.getBaseUrl() + 'api.ashx/v2/media/{MediaGalleryId}/files/{FileId}.json',
									data: {
										MediaGalleryId: j(data.target).data('galleryid'),
										FileId: j(data.target).data('mediaid')
									},
									success: function(response) {
										window.location = j(data.target).data('successurl');
									},
									defaultErrorMessage: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('MediaGalleries_MediaGalleryLinks_DeletePostError'))'
								});
							}
						});
					});
					</script>
				#end

				#set($convert = false)
				#set($convert = $core_v2_ui.ConvertContent($media.ContentId, $media.ContentTypeId))
				#if ($convert)
					<li class="navigation-list-item">
						$convert
					</li>
				#end

				#if ($core_v2_user.IsRegistered($core_v2_user.Accessing.Id))
					<li class="navigation-list-item">
						$core_v2_ui.Moderate($media.ContentId, $core_v2_media.ContentTypeId, "%{ }")
					</li>
				#end

		#if ($core_v3_feature.CanFeature($media.ContentId, $media.ContentTypeId))
		  <li class="navigation-list-item">$core_v2_ui.Feature($media.ContentId, $media.ContentTypeId)</li>
		#end

				<li class="navigation-list-item">
					<a href="#" data-more>$core_v2_language.GetResource('more')</a>
				</li>
				<li class="navigation-list-item">
					<a href="#" data-cancel>$core_v2_language.GetResource('cancel')</a>
				</li>
			</ul>
		</div>
	</div>

</div>
		]]></contentScript>
    <headerScript language="Velocity"><![CDATA[
#set ($header = $core_v2_widget.GetStringValue('fragmentHeader', '${resource:MediaGalleries_MediaGalleryPost_Name}'))
#if ($core_v2_gallery.Current && ($header == '' || $header == '${resource:MediaGalleries_MediaGalleryPost_Name}'))
	<a class="internal-link view-application media-gallery" href="$core_v2_encoding.HtmlAttributeEncode($core_v2_mediaUrls.Gallery($core_v2_gallery.Current.Id))">$core_v2_gallery.Current.Name</a>
#else
	$core_v2_widget.ApplyTokens($header)
#end
		]]></headerScript>
    <configuration><![CDATA[<propertyGroup id="options" labelResourceName="Options">
	<property id="fragmentHeader" labelResourceName="CF_Title" defaultValue="${resource:MediaGalleries_MediaGalleryPost_Name}" dataType="String" template="core_v2_tokenizedString" />
</propertyGroup>]]></configuration>
    <languageResources><![CDATA[<language key="en-us">
  <resource name="cancel">Cancel</resource>
  <resource name="CF_Title">Widget Title</resource>
  <resource name="Downloads_Plural">{0} Downloads</resource>
  <resource name="Downloads_Singular">1 Download</resource>
  <resource name="DraftPost">This media post is not published. </resource>
  <resource name="EmailReplies">Turn Comment notifications on</resource>
  <resource name="MediaGalleries_Button_Delete">Delete</resource>
  <resource name="MediaGalleries_Button_Download">Download</resource>
  <resource name="MediaGalleries_Button_Edit">Edit</resource>
  <resource name="MediaGalleries_Button_View">View</resource>
  <resource name="MediaGalleries_MediaGalleryLinks_DeletePostConfirmation">Are you sure you want to delete this file?</resource>
  <resource name="MediaGalleries_MediaGalleryLinks_DeletePostError">An error occurred while attempting to delete this file.</resource>
  <resource name="MediaGalleries_MediaGalleryPost_Description">Displays a file from the media gallery.</resource>
  <resource name="MediaGalleries_MediaGalleryPost_Name">Media Gallery - File</resource>
  <resource name="MediaGalleries_MediaGalleryPost_Title_File">File</resource>
  <resource name="MediaGallery_Share">Share</resource>
  <resource name="more">More</resource>
  <resource name="Options">Options</resource>
  <resource name="StopEmailingReplies">Turn Comment notifications off</resource>
</language>]]></languageResources>
    <additionalCssScript language="Unknown" />
    <requiredContext>
      <context id="a91f97494d81449ca3c3ec8d6eebaf25" />
    </requiredContext>
		<restScopes>
			<scope id="galleries.media.modify" />
		</restScopes>
  </scriptedContentFragment>
</scriptedContentFragments>