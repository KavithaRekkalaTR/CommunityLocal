#set($tempBody = "")
#set($tempKey = $core_v2_page.GetQueryStringValue("tempkey"))
#if ($tempKey)
	#set($tempBody = $core_v2_utility.GetTemporaryData($tempKey))
#end

#set ($replyFormId = $core_v2_widget.UniqueId('replyForm'))
#set ($createEditorId = $core_v2_widget.UniqueId('createEditor'))
#set ($createSuggestId = $core_v2_widget.UniqueId('createSuggest'))
#set ($footerReplyFormId = $core_v2_widget.UniqueId('footerReplyForm'))
#set ($footerCreateEditorId = $core_v2_widget.UniqueId('footerCreateEditor'))

## configuration
#set($showLikes = $core_v2_widget.GetBoolValue('showLikes', true))
#set($showRatings = $core_v2_widget.GetBoolValue('showRatings', false))

## context
#set ($wikiPage = $core_v2_wikiPage.Current)
#set($newThreadUrl = false)
#set($newThreadUrl = $core_v2_forumUrls.AddThread($thread.ForumId))

<div class="thread-start">

	#if($wikiPage)
		#set($wikiPageUrl = $core_v2_wikiUrls.Page($wikiPage.Id))
		#set($wikiEditPageUrl = $core_v2_wikiUrls.EditPage($wikiPage.Id, $thread.Id))
		<div class="message margin-bottom">
			$core_v2_language.FormatString($core_v2_language.GetResource("Wiki_CapturedThread"), "<a href='$wikiPageUrl' class='internal-link view-post'>$wikiPage.Title</a>")
			#if($wikiEditPageUrl)
				<div>
					<a href='$wikiEditPageUrl'>$core_v2_language.GetResource("Wiki_Recapture")</a>
				</div>
			#end
			#if($hasModifyThreadPermission)
				<div>
					<a href="#" data-messagename="telligent.evolution.widgets.thread.unlinkwiki" data-threadid="$thread.Id">$core_v2_language.GetResource("Wiki_Capture_Delete")</a>
				</div>
			#end
		</div>
	#end

	## render

	##
	## Renders a Thread Starter or Reply
	##

	#set ($hasMarkAnswerPermission = $core_v3_permission.CheckPermission($core_v2_forumPermissions.MarkAsAnswer, $core_v2_user.Accessing.Id, "%{ ContentId = $thread.ContentId, ContentTypeId = $core_v2_forumThread.ContentTypeId }").IsAllowed)

	#set ($isQA = false)
	#if ($thread.ThreadType == 'QuestionAndAnswer')
		#set ($isQA = true)
	#end

	#set ($hasAttachment = false)
	#set ($hasAttachment = $thread.File && $thread.File.FileUrl)
	#set ($mediaType = false)
	#set ($mediaRendered = false)
	#if ($hasAttachment)
		#set ($mediaType = $core_v2_ui.GetMediaType($thread.File.FileUrl, "%{ ViewType = 'View' }"))
	#end

	#set ($statusClass = '')

	#set ($replyFormId = $core_v2_widget.UniqueId("replyFormId${thread.ContentId}"))
	#set ($composeReplyId = $core_v2_widget.UniqueId("composeReply${thread.ContentId}"))
	#set ($cancelReplyId = $core_v2_widget.UniqueId("cancelReply${thread.ContentId}"))

	#if($thread.IsLocked)
		<div class="message warning">
			<div><strong>$core_v2_language.GetResource('Locked_Message')</strong></div>
			#if($newThreadUrl)
				  $core_v2_language.FormatString($core_v2_language.GetResource('Locked_Message_Detail'),"<a href='$newThreadUrl'>","</a>")
			#else
				$core_v2_language.FormatString($core_v2_language.GetResource('Locked_Message_Detail'),"","")
			#end

		</div>
	#end
	<div class="content full" #if (!$isThread)id="$thread.Id"#end data-threadid="$!thread.Id" data-userid="$!thread.Author.Id" data-permalink="$core_v2_encoding.HtmlAttributeEncode($core_v2_page.ApplicationEscapeUrl($thread.Url))">
		<h1 class="name">$thread.Subject</h1>

		<div class="author header thread-starter">
			<div class="avatar">
				#if ($thread.Author.ProfileUrl)
					<a href="$core_v2_encoding.HtmlAttributeEncode($thread.Author.ProfileUrl)">
						$core_v2_ui.GetResizedImageHtml($thread.Author.AvatarUrl, 32, 32, "%{border='0', alt=$thread.Author.DisplayName, ResizeMethod='ZoomAndCrop'}")
					</a>
				#else
					$core_v2_ui.GetResizedImageHtml($thread.Author.AvatarUrl, 32, 32, "%{border='0', alt=$thread.Author.DisplayName, ResizeMethod='ZoomAndCrop'}")
				#end
			</div>
			<span class="user-name">
				$core_v2_ui.UserPresence($thread.Author.Id)
				#if ($thread.Author.ProfileUrl)
					<a href="$core_v2_encoding.HtmlAttributeEncode($thread.Author.ProfileUrl)" class="internal-link view-user-profile">
						$thread.Author.DisplayName
					</a>
				#else
					$thread.Author.DisplayName
				#end
				#if($thread.UserHostAddress && $thread.UserHostAddress != "")
					<span class="host-address">
						$thread.UserHostAddress
					</span>
				#end
			</span>
			<span class="post-date">
				<a href="$core_v2_encoding.HtmlAttributeEncode($thread.Url)">$core_v2_ui.AgoDate($thread.Date)</a>
			</span>
		</div>

		## audio/video
		#if ($hasAttachment && ($mediaType == 'Video' || $mediaType == 'Audio'))
			<div class="attachment">
				$core_v2_ui.GetViewHtml($thread.File.FileUrl, "%{ AdjustToContainer = 'true' }")
				<a href="$core_v2_encoding.HtmlAttributeEncode($thread.File.FileUrl)">$thread.File.FileName</a>
			</div>
			#set ($mediaRendered = true)
		#end

		<div class="content">
			$thread.Body("Web")
			#if($thread.EmailFiles && $thread.EmailFiles.Count() > 0)
				#foreach($emailFile in $thread.EmailFiles)
				#beforeall
					<div class="content-list thumbnail ui-masonry margin-top" data-columnclass="thumbnail-column">
				#each
					<div class="content-item content thumbnail" data-hasmore="false" data-url="$core_v2_encoding.HtmlAttributeEncode($emailFile.ViewUrl)">
						<div class="avatar">
							$core_v2_ui.GetPreviewHtml($emailFile.DirectDownloadUrl, "%{ Width = 140 }")
							</div>
							<h3 class="name">
								<a href="$core_v2_encoding.HtmlAttributeEncode($emailFile.ViewUrl)">$core_v2_encoding.HtmlEncode($emailFile.FileName)</a>
							</h3>
					</div>
				#afterall
					</div>
				#end
			#end
			#if($thread.EditNotes && $thread.EditNotes != "" && $core_v2_forumConfiguration.DisplayEditNotes)
				<br /><br />
				$thread.EditNotes
				<br />
			#end
		</div>

		## viewable non audio/video
		#if (!$mediaRendered && $hasAttachment && $mediaType && $mediaType != 'Empty')
			<div class="attachment margin-bottom">
				<ul class="navigation-list">
					<li class="navigation-list-item">
						<a class="file-name" href="$core_v2_encoding.HtmlAttributeEncode($thread.File.FileUrl)">$thread.File.FileName</a>
					</li>
					<li class="navigation-list-item view-attachment">
						<a href="#" data-messagename="telligent.evolution.widgets.thread.viewattachment">$core_v2_language.GetResource('view')</a>
					</li>
					<li class="navigation-list-item hide-attachment">
						<a href="#" data-messagename="telligent.evolution.widgets.thread.hideattachment" class="hidden">$core_v2_language.GetResource('hide')</a>
					</li>
				</ul>
				<div class="viewer hidden margin-bottom">
					$core_v2_ui.GetViewHtml($thread.File.FileUrl, "%{ AdjustToContainer = 'true' }")
				</div>
			</div>
			#set ($mediaRendered = true)
		#end

		## non-viewable
		#if (!$mediaRendered && $hasAttachment && !$mediaType || $mediaType == 'Empty')
			<a class="file-name" href="$core_v2_encoding.HtmlAttributeEncode($thread.File.FileUrl)">$thread.File.FileName</a>
			#set ($mediaRendered = true)
		#end

		<div class="actions footer">
			#set($maxLinks = 0)

			#set ($hasRatings = false)
			#if ($showRatings && $core_v2_forumThread.AreRatingsEnabled($thread.Id))
				#set ($hasRatings = true)
				#set ($maxLinks = $maxLinks + 1)
			#end

			#set ($hasLikes = false)
			#if ($showLikes && $core_v2_like.SupportsLikes($thread.GlobalContentTypeId))
				#set ($hasLikes = true)
				#set ($maxLinks = $maxLinks + 1)
			#end

			##check if replies are allowed
			#set ($allowsReplies = false)
			#if ($core_v2_forumThread.AllowsReplies($thread.ContentId) && !$thread.IsLocked)
				#set ($allowsReplies = true)
			#end

			#set ($hasReply = false)
			#if (($hasModeratePermission || $allowsReplies) && $hasReplyPermission)
				#set ($hasReply = true)
				#set ($maxLinks = $maxLinks + 2)
			#end

			## check if user is anonymous
			#set($isAnonymous = true)
			#if ($core_v2_user.IsRegistered($core_v2_user.Accessing.Id))
				#set($isAnonymous = false)
			#end

			#set ($userMustLogin = false)
			#set ($userMustLogin = $allowsReplies && $isAnonymous && !$hasReply)

			#if ($isRegistered)
				#set ($maxLinks = $maxLinks + 1)
			#end

			#set ($postActionsId = $core_v2_widget.UniqueId("postActions-${thread.ContentId}"))

			<div class="ui-links navigation-list"
				data-minlinks="$maxLinks"
				data-direction="horizontal"
				data-maxlinks="$maxLinks"
				id="$core_v2_encoding.HtmlAttributeEncode($postActionsId)">
				<ul class="navigation-list">

					## Reply to Post
					#if ($userMustLogin)
					    <li class="navigation-list-item compose primary">
							<a href="#" class="internal-link login" data-messagename="telligent.evolution.widgets.thread.login">$core_v2_language.GetResource('login_to_reply')</a>
						</li>
					#elseif ($hasReply)
						<li class="navigation-list-item compose primary">
							<a data-messagename="telligent.evolution.widgets.thread.composereply"
								href="#"
								data-cancelid="$core_v2_encoding.HtmlAttributeEncode($cancelReplyId)"
								data-replyformid="$core_v2_encoding.HtmlAttributeEncode($replyFormId)"
								id="$core_v2_encoding.HtmlAttributeEncode($composeReplyId)"
								#if ($thread.ReplyCount == 0) class="hidden"#end>
								$core_v2_language.GetResource('reply')
							</a>
						</li>
						<li class="navigation-list-item cancel">
							<a data-messagename="telligent.evolution.widgets.thread.cancelreply"
								href="#"
								data-composeid="$core_v2_encoding.HtmlAttributeEncode($composeReplyId)"
								data-replyformid="$core_v2_encoding.HtmlAttributeEncode($replyFormId)"
								id="$core_v2_encoding.HtmlAttributeEncode($cancelReplyId)"
								#if ($thread.ReplyCount > 0) class="hidden"#end>
								$core_v2_language.GetResource('cancel')
							</a>
						</li>
					#end

					## Like Post
					#if ($hasLikes)
						#set ($likeFormat = "{count}")
						#if ($core_v2_like.CanLike($thread.ContentId, $thread.GlobalContentTypeId))
							#set ($likeFormat = "{toggle} {count}")
						#end
						<li class="navigation-list-item like">
							$core_v2_ui.Like($thread.ContentId, $thread.GlobalContentTypeId, "%{ Format = $likeFormat, IncludeTip = 'true' }")
						</li>
					#end

					## Rate Post
					#if ($hasRatings)
						<li class="navigation-list-item rating">
							$core_v2_ui.Rate($thread.ContentId, $core_v2_forumThread.ContentTypeId)
						</li>
					#end

					## custom more link which we handle explicitly to first load more links
					#if ($isRegistered)
						<li class="navigation-list-item">
							<a href="#"
								data-messagename="widget.${core_v2_widget.WrapperElementId}.threadstart.more"
								data-forumapplicationid="$forum.ApplicationId"
								data-threadcontentid="$thread.ContentId"
								data-postactionsid="$core_v2_encoding.HtmlAttributeEncode($postActionsId)">$core_v2_language.GetResource('more')</a>
						</li>
					#end

					## Report abuse
					#if ($isRegistered)
						<li class="navigation-list-item">
							$core_v2_ui.Moderate($thread.ContentId, $thread.GlobalContentTypeId)
						</li>
					  #end

					<li class="navigation-list-item">
						<a href="#" data-cancel>$core_v2_language.GetResource('cancel')</a>
					</li>

				</ul>
			</div>
		</div>

		#if ($hasReply)
			<form><fieldset #if ($thread.ReplyCount > 0) class="hidden"#end id="$core_v2_encoding.HtmlAttributeEncode($replyFormId)">
				<ul class="field-list">
					<li class="field-item post-body">
						<span class="field-item-input">
							#set ($submittableEditorOptions = "%{}")
							$submittableEditorOptions.Add('ContentTypeId', $core_v2_forumReply.ContentTypeId.ToString())
							$submittableEditorOptions.Add('Width','100%')
							$submittableEditorOptions.Add('Height','60px')
							$submittableEditorOptions.Add('Placeholder', $core_v2_language.GetResource('placeholder'))
							$submittableEditorOptions.Add('AutoResize', true)
							$submittableEditorOptions.Add('EnableEnterToSubmitToggle', false)
							#if ($userMustLogin)
								$submittableEditorOptions.Add('EnterToSubmitPrompt', $core_v2_language.GetResource('Reply_EnterToLogin'))
								$submittableEditorOptions.Add('SubmitLabel', $core_v2_language.GetResource('Reply_Login'))
							#else
								$submittableEditorOptions.Add('EnterToSubmitPrompt', $core_v2_language.GetResource('Reply_EnterToReply'))
								$submittableEditorOptions.Add('SubmitLabel', $core_v2_language.GetResource('Reply_Reply'))
							#end

							#set ($dq = '"')
							#set ($fullEditorLink = '')
							#if ($enableFullEditor)
								#set ($fullEditorLink = "<a href=${dq}#${dq} data-threadid=${dq}${thread.Id}${dq} data-messagename=${dq}telligent.evolution.widgets.thread.fullEditor.start${dq} class=${dq}inline-button${dq}>${core_v2_language.GetResource('full_editor')}</a>")
							#end
							#if ($thread.ThreadType == 'QuestionAndAnswer')
								#set ($suggestAnswer = "<span class=${dq}suggest-field${dq}><input type=${dq}checkbox${dq} id=${dq}${createSuggestId}${dq} class=${dq}suggest${dq} /><label for=${dq}${createSuggestId}${dq}>${core_v2_language.GetResource('suggest_as_answer')}</label></span>")
								$submittableEditorOptions.Add('BeforeHtml', "${fullEditorLink}${suggestAnswer}")
							#else
								$submittableEditorOptions.Add('BeforeHtml', "${fullEditorLink}")
							#end

							$core_v2_submittableEditor.Render($createEditorId, "function() { jQuery.telligent.evolution.messaging.publish('telligent.evolution.widgets.thread.submit', { from: '${core_v2_widget.WrapperElementId}-root', position: 'header', #if ($userMustLogin) login: true #else login: false #end, forumId: $forum.Id , threadId: $thread.Id }); }", $submittableEditorOptions)
						</span>
						<span class="field-item-validation" style="display: none;"></span>
						<span class="processing hidden"><span class="ui-loading" data-width="45" data-height="15"></span></span>
					</li>
				</ul>
			</fieldset></form>
		#end
	</div>

</div>