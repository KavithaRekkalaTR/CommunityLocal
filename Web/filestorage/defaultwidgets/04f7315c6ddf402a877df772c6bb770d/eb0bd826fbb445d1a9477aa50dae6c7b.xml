<?xml version="1.0" encoding="utf-8"?>
<scriptedContentFragments>
	<scriptedContentFragment name="${resource:DefaultContentRendering_Name}" cssClass="rendered-default-content" description="${resource:DefaultContentRendering_Description}"
		instanceIdentifier="eb0bd826fbb445d1a9477aa50dae6c7b" isCacheable="false" varyCacheByUser="true" showHeaderByDefault="false">
	<contentScript><![CDATA[
#set ($content = $context.Content)

#if ($content)

	#set ($typeCssClass = "default")
	#set ($avatarSize = 24)
	#set ($id = $core_v2_widget.UniqueId("searchresult"))

	#set ($target = $context.Target)
	#set ($title = $content.HtmlName($target))
	#set ($body = $content.HtmlDescription($target))

	#if($content.CreatedByUserId)
		#set($user = $core_v2_user.Get("%{Id = $context.Content.CreatedByUserId}"))
	#end

	#if ($content.CreatedDate)
		#set ($date = $content.CreatedDate)
	#end

	#if($content.Application)
		#set($applicationName = $content.Application.HtmlName($target))
		#set($applicationUrl = $content.Application.Url)

		#if($applicationName != '' && $applicationUrl != '')
			#set($hasApplication = true)
		#end
	#end

	#if($content.Application && $content.Application.Container)
		#set ($containerName = $content.Application.Container.HtmlName($target))
		#set ($containerUrl = $content.Application.Container.Url)
		#set ($containerAvatarUrl = $content.Application.Container.AvatarUrl)

		#if($containerName != '' && $containerUrl != '')
			#set($hasContainer = true)
		#end
	#end

	<div class="content abbreviated rendered $typeCssClass" id="$id">

		<div class="summary">
			<h3 class="name">
				<a class="internal-link" title="$core_v2_encoding.HtmlAttributeEncode($core_v2_language.Truncate($core_v2_encoding.HtmlDecode($title), 250, '...'))" href="$core_v2_encoding.HtmlAttributeEncode($content.Url)">
					$core_v2_language.Truncate($title, 250, '...')
				</a>
			</h3>

			#if($user)
				<div class="author">
					<div class="avatar">
					#if (!$user.IsSystemAccount && $user.Url)
						<a href="$core_v2_encoding.HtmlAttributeEncode($user.Url)" class="internal-link view-user-profile">
							$core_v2_ui.GetResizedImageHtml($user.AvatarUrl, $avatarSize, $avatarSize, "%{ResizeMethod = 'ZoomAndCrop', border='0px', alt='$user.DisplayName' }")
						</a>
					#else
						$core_v2_ui.GetResizedImageHtml($user.AvatarUrl, $avatarSize, $avatarSize, "%{ResizeMethod = 'ZoomAndCrop', border='0px', alt='$user.DisplayName' }")
					#end
					</div>

					<span class="username">
					#if (!$user.IsSystemAccount && $user.Url)
						<a href="$core_v2_encoding.HtmlAttributeEncode($user.Url)" class="internal-link view-user-profile activity-summary-user">$user.DisplayName</a>
					#else
						$user.DisplayName
					#end
					</span>
				</div>
			#elseif ($containerAvatarUrl && $containerAvatarUrl != '')
				<div class="author">
					<div class="avatar">
						<a $core_v2_ui.ContentPeek($content.ContentId, $content.ContentTypeId) href="$core_v2_encoding.HtmlAttributeEncode($content.Url)">
							$core_v2_ui.GetResizedImageHtml($containerAvatarUrl, $avatarSize, $avatarSize, "%{OutputIsPersisted = 'false', ResizeMethod = 'ZoomAndCrop', alt='$containerName' }")
						</a>
					</div>
				</div>
			#end

			#if ($body && $body != '')
				<div class="content">$core_v2_language.Truncate($body, 250, "%{ Ellipsis = 'â€¦', MaintainHtmlFormatting = 'true' }")</div>
			#else
				<div class = "content empty"></div>
			#end
		</div>

		#if ($date || $hasApplication || $hasContainer)
			<div class="attributes">
				<ul class="attribute-list">
					#if ($date)
						<li class="attribute-item date">$core_v2_language.FormatAgoDate($date, true)</li>
					#end
					#if ($hasContainer)
						<li class="attribute-item container">
							<a href="$core_v2_encoding.HtmlAttributeEncode($containerUrl)">$containerName</a>
						</li>
					#end
					#if ($hasApplication)
						<li class="attribute-item application">
							<a href="$core_v2_encoding.HtmlAttributeEncode($applicationUrl)">$applicationName</a>
						</li>
					#end
				</ul>
			</div>
		#end

	</div>
#else
	$core_v2_widget.Hide()
#end
]]></contentScript>
<headerScript></headerScript>
<languageResources>
<language key="en-us">
	<resource name="DefaultContentRendering_Name">Rendered Default Content</resource>
	<resource name="DefaultContentRendering_Description">Displays default rendering for content.</resource>
	<resource name="ShowAttachment">View</resource>
	<resource name="HideAttachment">Hide</resource>
</language>
</languageResources>
	</scriptedContentFragment>
</scriptedContentFragments>
