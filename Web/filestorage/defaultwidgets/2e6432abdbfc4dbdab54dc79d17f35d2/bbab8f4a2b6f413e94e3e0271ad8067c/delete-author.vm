#set($userId = $core_v2_utility.ParseInt($core_v2_page.GetQueryStringValue('w_userid')))
#set($author = $core_v2_user.Get("%{Id=$userId}"))

#if ($author)
	<fieldset>
		<ul class="field-list">
			<li class="field-item">
				<h3 class="header">$core_v2_language.GetResource('UserDetails')</h3>	
				<span class="field-item-input">
					<table class="form">
					    
					    <tr>
							<th>$core_v2_language.GetResource('UserName')</th>
							<td>$author.DisplayName #if ($author.Username != $author.DisplayName) ($author.Username)#end</td>
						</tr>

						#if ($author.ProfileUrl)
							<tr>
								<th>$core_v2_language.GetResource('Profile')</th>
								<td><a href="$core_v2_encoding.HtmlAttributeEncode($author.ProfileUrl)" target="_blank">$core_v2_language.GetResource('ViewProfile')</a></td>
							</tr>
						#end

						<tr>
							<th>$core_v2_language.GetResource('MemberSince')</th>
							<td>$core_v2_language.FormatDate($author.JoinDate)</td>
						</tr>

						<tr>
							<th>$core_v2_language.GetResource('reputation')</th>
							<td>
								#set($top = (100 - $author.QualityPercentile))
								#if ($top <= 0)
									#set($top = 1)
								#end
								$core_v2_language.FormatString($core_v2_language.GetResource('reputation_value'), $core_v2_language.FormatNumber($top))
							</td>
						</tr>

						## roles
						#set ($userRoles = $core_v2_role.List("%{ Include = 'user', UserId = $author.Id, PageIndex = 0, PageSize = 20 }"))
						#set ($userRolesString = "")
						#foreach ($role in $userRoles)
						#each
							#if ($role && (!$role.GroupId || $role.GroupId == 0))
								#if ($userRolesString != "")
									#set($userRolesString = "$userRolesString, ")
								#end
								#set($userRolesString = "$userRolesString$role.Name")
							#end
						#end
						<tr>
							<th>$core_v2_language.GetResource('CurrentRoles')</th>
							<td>$!userRolesString</td>
						</tr>

						#set($contents = $core_v2_abusiveContent.List("%{ AuthorUserId = $author.ContentId, PageSize = 10, PageIndex = 0 }"))

						## count of abusive content in various states
						#set($reportedAbusiveContent = $core_v2_abusiveContent.List("%{ AbuseState = 'Reported', AuthorUserId = $author.ContentId, PageSize = 1, PageIndex = 0 }"))
						#set($appealedAbusiveContent = $core_v2_abusiveContent.List("%{ AppealState = 'Initiated', AuthorUserId = $author.ContentId, PageSize = 1, PageIndex = 0 }"))
						#set($appealResponsedAbusiveContent = $core_v2_abusiveContent.List("%{ AppealState = 'AuthorResponded', AuthorUserId = $author.ContentId, PageSize = 1, PageIndex = 0 }"))
						#set($confirmedAbusiveContent = $core_v2_abusiveContent.List("%{ AppealState = 'Rejected', AuthorUserId = $author.ContentId, PageSize = 1, PageIndex = 0 }"))
						#set($expiredAbusiveContent = $core_v2_abusiveContent.List("%{ AppealState = 'Expired', AuthorUserId = $author.ContentId, PageSize = 1, PageIndex = 0 }"))
						#set($notAbusiveContent = $core_v2_abusiveContent.List("%{ AbuseState = 'NotAbusive', AuthorUserId = $author.ContentId, PageSize = 1, PageIndex = 0 }"))

						## counts of abuse appeals in various states
						#set ($initiatedAppeals = $core_v2_abuseAppeal.List("%{ AppealState = 'Initiated', ContentAuthorId = $author.ContentId, PageSize = 1, PageIndex = 0	}"))
						#set ($acceptedAppeals = $core_v2_abuseAppeal.List("%{ AppealState = 'Accepted', ContentAuthorId = $author.ContentId, PageSize = 1, PageIndex = 0  }"))
						#set ($rejectedAppeals = $core_v2_abuseAppeal.List("%{ AppealState = 'Rejected', ContentAuthorId = $author.ContentId, PageSize = 1, PageIndex = 0  }"))
						#set ($expiredAppeals = $core_v2_abuseAppeal.List("%{ AppealState = 'Expired', ContentAuthorId = $author.ContentId, PageSize = 1, PageIndex = 0	}"))
						#set ($authorResponseAppeals = $core_v2_abuseAppeal.List("%{ AppealState = 'AuthorResponded', ContentAuthorId = $author.ContentId, PageSize = 1, PageIndex = 0  }"))

						#set ($totalCommentCount = 0)
						#set ($allComments = $core_v2_comments.List("%{ PageIndex = 0, PageSize = 1, UserId = $author.Id, IncludeChildren = 'True' }"))
						#set ($totalCommentCount = $allComments.TotalCount)
						#set ($totalPostCount = $author.TotalPosts + $totalCommentCount)

						<tr>
							<th>$core_v2_language.GetResource('Posts')</th>
							<td>
								$core_v2_language.FormatNumber($totalPostCount)
							</td>
						</tr>

						#set ($contentWithFlags = $reportedAbusiveContent.TotalCount + $appealedAbusiveContent.TotalCount + $expiredAbusiveContent.TotalCount + $confirmedAbusiveContent.TotalCount + $appealResponsedAbusiveContent.TotalCount)
						<tr>
							<th>$core_v2_language.GetResource('PostsWithFlags')</th>
							<td>$core_v2_language.FormatNumber($contentWithFlags)</td>
						</tr>

						#set ($contentHidden = $initiatedAppeals.TotalCount + $rejectedAppeals.TotalCount + $expiredAppeals.TotalCount + $authorResponseAppeals.TotalCount)
						<tr>
							<th>$core_v2_language.GetResource('PostsHidden')</th>
							<td>$core_v2_language.FormatNumber($contentHidden)</td>
						</tr>

						#set ($appealCount = $acceptedAppeals.TotalCount + $rejectedAppeals.TotalCount + $expiredAppeals.TotalCount + $authorResponseAppeals.TotalCount)
						<tr>
							<th>$core_v2_language.GetResource('Appeals')</th>
							<td>$core_v2_language.FormatNumber($appealCount)</td>
						</tr>

						#set ($respondedAppealCount = $authorResponseAppeals.TotalCount)
						<tr>
							<th>$core_v2_language.GetResource('AppealsOpen')</th>
							<td>$core_v2_language.FormatNumber($respondedAppealCount)</td>
						</tr>

						#set ($acceptedAppealCount = $acceptedAppeals.TotalCount)
						<tr>
							<th>$core_v2_language.GetResource('AppealsAccepted')</th>
							<td>$core_v2_language.FormatNumber($acceptedAppealCount)</td>
						</tr>
					</table>
				</span>
			</li>
		</ul>
	</fieldset>
#else
	<div class="message error">$core_v2_language.GetResource('AuthorNotFound')</div>
#end

	<div class="description">$core_v2_language.GetResource('ConfirmUserDeletionDetail')</div>
	
	<fieldset>
		<h3 class="header">$core_v2_language.GetResource('UserContent')</h3>	
		$core_v2_widget.ExecuteFile('callback-list-authorscontent.vm')
	</fieldset>	
<script type="text/javascript">
jQuery.telligent.evolution.administration.on('panel.loaded', function(){
	jQuery.telligent.evolution.widgets.appealQueueAuthorDelete.register({
		userId: '$userId',
		inputs: {
			searchresultlistId: '#$core_v2_encoding.JavascriptEncode($core_v2_widget.UniqueId('search-results-list'))'
		},
		urls: {
			pagedcontent: '$core_v2_encoding.JavaScriptEncode($core_v2_widget.GetExecutedFileUrl('callback-list-authorscontent.vm'))'
		}
	});
});
</script>